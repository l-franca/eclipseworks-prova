// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eclipseworks_teste.Context;

#nullable disable

namespace eclipseworksteste.Migrations
{
    [DbContext(typeof(EclipseContext))]
    [Migration("20231203180803_adding cascade remove")]
    partial class addingcascaderemove
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("eclipseworks_teste.Entities.HistoricoTarefa", b =>
                {
                    b.Property<long>("CodHistorico")
                        .HasColumnType("bigint");

                    b.Property<long>("CodTarefa")
                        .HasColumnType("bigint");

                    b.Property<long>("CodUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("StatusHistorico")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusTarefa")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("CodHistorico");

                    b.HasIndex("CodUsuario");

                    b.ToTable("HistoricoTarefa");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.Projeto", b =>
                {
                    b.Property<long>("CodProjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CodProjeto"));

                    b.Property<long>("CodUsuario")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("CodProjeto");

                    b.HasIndex("CodUsuario");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.Tarefa", b =>
                {
                    b.Property<long>("CodTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CodTarefa"));

                    b.Property<long>("CodProjeto")
                        .HasColumnType("bigint");

                    b.Property<long>("CodUsuario")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Prioridade")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("CodTarefa");

                    b.HasIndex("CodProjeto");

                    b.HasIndex("CodUsuario");

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.Usuario", b =>
                {
                    b.Property<long>("CodUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CodUsuario"));

                    b.Property<int>("Cargo")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("CodUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.HistoricoTarefa", b =>
                {
                    b.HasOne("eclipseworks_teste.Entities.Tarefa", "Tarefa")
                        .WithMany("HistoricoTarefa")
                        .HasForeignKey("CodHistorico")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("eclipseworks_teste.Entities.Usuario", "Usuario")
                        .WithMany("HistoricoTarefas")
                        .HasForeignKey("CodUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.Projeto", b =>
                {
                    b.HasOne("eclipseworks_teste.Entities.Usuario", "Usuario")
                        .WithMany("Projeto")
                        .HasForeignKey("CodUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.Tarefa", b =>
                {
                    b.HasOne("eclipseworks_teste.Entities.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("CodProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eclipseworks_teste.Entities.Usuario", "Usuario")
                        .WithMany("Tarefas")
                        .HasForeignKey("CodUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.Tarefa", b =>
                {
                    b.Navigation("HistoricoTarefa");
                });

            modelBuilder.Entity("eclipseworks_teste.Entities.Usuario", b =>
                {
                    b.Navigation("HistoricoTarefas");

                    b.Navigation("Projeto");

                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
